{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "env": {
            "type": "string",
            "metadata": {
                "description": "pick an environment"
            },
            "allowedValues": [
                "dev",
                "pre-prod",
                "prod"
            ]
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "appName": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {
        "vnetName": "[concat('vnet',parameters('appName'), parameters('env'))]",
        "cosmosAccountName": "[concat('cosmos', 'acc',parameters('appName'), parameters('env'))]",
        "databaseName": "[concat(parameters('appName'), '-db-', parameters('env'))]",
        "firewallName": "[concat(parameters('appName'), 'firewall', parameters('env'))]",
        "appServiceName": "[concat(parameters('appName'), 'appservice', parameters('env'))]",
        "webAppName": "[concat(parameters('appName'), 'webapp', parameters('env'))]",
        "redisName": "[concat(parameters('appName'), '-', 'redis', parameters('env'))]"
    },
    "resources": [
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'app-gateway-nsg')]"
            ],
            "tags": {
                "displayName": "virtualNetwork1"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "app-subnet",
                        "properties": {
                            "addressPrefix": "10.1.0.0/26"
                        }
                    },
                    {
                        "name": "app-gateway-subnet",
                        "properties": {
                            "addressPrefix": "10.1.0.64/26",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'app-gateway-nsg')]"
                            }
                        }
                    },
                    {
                        "name": "db-subnet",
                        "properties": {
                            "addressPrefix": "10.1.0.128/26",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "app-gateway-nsg",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "JM",
                        "properties": {
                            "description": "description",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "443",
                                "80"
                            ],
                            "sourceAddressPrefix": "89.25.227.114/32",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "gate-rule",
                        "properties": {
                            "description": "required by v2 gateway",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2019-11-01",
            "name": "[variables('firewallName')]",
            "location": "[parameters('location')]",
            "condition": "[equals(parameters('env'), 'prod')]",
            "dependsOn": [
            ],
            "properties": {
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Prevention"
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.1"
                        },
                        {
                            "ruleSetType": "Microsoft_BotManagerRuleSet",
                            "ruleSetVersion": "0.1",
                            "ruleGroupOverrides": []
                        }
                    ]
                },
                "customRules": [
                    {
                        "name": "BlockEvilBot",
                        "ruleType": "MatchRule",
                        "priority": 5,
                        "action": "Block",
                        "matchConditions": [
                            {
                                "matchVariables": [
                                    {
                                        "variableName": "RequestHeaders",
                                        "selector": "User-Agent"
                                    }
                                ],
                                "operator": "Contains",
                                "matchValues": [
                                    "evilbot"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-11-01",
            "name": "appgateway1",
            "condition": "[equals(parameters('env'), 'prod')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('firewallName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'app-gateway-subnet')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 443,
                            "Protocol": "Https",
                            "CookieBasedAffinity": "Enabled",
                            "connectionDraining": {
                                "drainTimeoutInSec": 1200,
                                "enabled": true
                            },
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 120
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', 'appgateway1', 'appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts',  'appgateway1', 'appGatewayFrontendPort')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "ruleName",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', 'appgateway1', 'appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', 'appgateway1', 'appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', 'appgateway1', 'appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('firewallName'))]"
                }
            }
        },
        {
            "name": "publicIPAddress1",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "condition": "[equals(parameters('env'), 'prod')]",
            "sku": {
                "name": "Standard"
            },
            "tags": {
                "displayName": "publicIPAddress1"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "majer-app-dev"
                }
            }
        },
        {
            "name": "[variables('cosmosAccountName')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "kind": "MongoDB",
            "properties": {
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'db-subnet')]",
                        "ignoreMissingVNetServiceEndpoint": false
                    }
                ],
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxStalenessPrefix": 1,
                    "maxIntervalInSeconds": 5
                },
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": true,
                "ipRules": [
                    {
                        "ipAddressOrRange": "89.25.227.114"
                    },
                    {
                        "ipAddressOrRange": "104.42.195.92"
                    },
                    {
                        "ipAddressOrRange": "40.76.54.131"
                    },
                    {
                        "ipAddressOrRange": "52.176.6.30"
                    },
                    {
                        "ipAddressOrRange": "52.169.50.45"
                    },
                    {
                        "ipAddressOrRange": "52.187.184.26"
                    }
                ],
                "capabilities": [
                    {
                        "name": "EnableMongo"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "name": "[concat(variables('cosmosAccountName'), '/', variables('databaseName'))]",
            "apiVersion": "2021-01-15",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400,
                    "id": "[variables('databaseName')]"
                },
                "options": {
                }
            }
        },
        {
            "name": "[variables('appServiceName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "tags": {
                "displayName": "appServicePlan1"
            },
            "properties": {
                "name": "[variables('appServiceName')]"
            }
        },
        {
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]": "Resource",
                "displayName": "[variables('webAppName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServiceName'))]"
            ],
            "properties": {
                "name": "[variables('webAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceName'))]"
            }
        },
        {
            "name": "[variables('redisName')]",
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "redisCache1"
            },
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                }
            }
        }
    ],
    "outputs": {}
}